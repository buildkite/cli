agents:
  queue: hosted

steps:
  - name: ":golangci-lint: lint"
    command: golangci-lint run --verbose --timeout 3m
    plugins:
      docker-compose#v5.1.0:
        config: .buildkite/docker-compose.yaml
        run: golangci-lint
        tty: true

  - name: ":go: test"
    artifact_paths:
      - cover-tree.svg
    commands:
      - go test -coverprofile cover.out ./...
      - go run github.com/nikolaydubina/go-cover-treemap@latest -coverprofile cover.out > cover-tree.svg
      - echo '<details><summary>Coverage tree map</summary><img src="artifact://cover-tree.svg" alt="Test coverage tree map" width="70%"></details>' | buildkite-agent annotate --style "info"
    plugins:
      docker-compose#v5.1.0:
        config: .buildkite/docker-compose.yaml
        run: golangci-lint
        tty: true
        mount-buildkite-agent: true

  - wait

  - label: ":buildkite: build ({{matrix.os}}/{{matrix.arch}})"
    matrix:
      setup:
        os:
          - "darwin"
          - "linux"
          - "windows"
        arch:
          - amd64
          - arm64
          - '386'
          - arm
      adjustments:
        - with:
            os: windows
            arch: arm
          skip: true
        - with:
            os: darwin
            arch: arm
          skip: true
        - with:
            os: darwin
            arch: '386'
          skip: true
    artifact_paths:
      - dist/**/*
    plugins:
      docker-compose#v5.1.0:
        command:
          - .buildkite/release.sh
        config: .buildkite/docker-compose.yaml
        entrypoint: /bin/sh
        env:
          - GORELEASER_ARGS=--snapshot --split
          - GOOS={{matrix.os}}
          - GOARCH={{matrix.arch}}
        mount-buildkite-agent: true
        run: goreleaser
        shell: false
        tty: true
