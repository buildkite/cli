// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetArtifactsArtifact includes the requested fields of the GraphQL type Artifact.
// The GraphQL type's documentation follows.
//
// A file uploaded from the agent whilst running a job
type GetArtifactsArtifact struct {
	// The public UUID for this artifact
	Uuid string `json:"uuid"`
	// The path of the uploaded artifact
	Path string `json:"path"`
	// The download URL for the artifact. Unless you've used your own artifact storage, the URL will be valid for only 10 minutes.
	DownloadURL string `json:"downloadURL"`
	// The job that uploaded this artifact
	Job *GetArtifactsArtifactJobJobTypeCommand `json:"job"`
}

// GetUuid returns GetArtifactsArtifact.Uuid, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifact) GetUuid() string { return v.Uuid }

// GetPath returns GetArtifactsArtifact.Path, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifact) GetPath() string { return v.Path }

// GetDownloadURL returns GetArtifactsArtifact.DownloadURL, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifact) GetDownloadURL() string { return v.DownloadURL }

// GetJob returns GetArtifactsArtifact.Job, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifact) GetJob() *GetArtifactsArtifactJobJobTypeCommand { return v.Job }

// GetArtifactsArtifactJobJobTypeCommand includes the requested fields of the GraphQL type JobTypeCommand.
// The GraphQL type's documentation follows.
//
// A type of job that runs a command on an agent
type GetArtifactsArtifactJobJobTypeCommand struct {
	// The UUID for this job
	Uuid string `json:"uuid"`
	// The pipeline that this job is a part of
	Pipeline *GetArtifactsArtifactJobJobTypeCommandPipeline `json:"pipeline"`
	// The build that this job is a part of
	Build *GetArtifactsArtifactJobJobTypeCommandBuild `json:"build"`
}

// GetUuid returns GetArtifactsArtifactJobJobTypeCommand.Uuid, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifactJobJobTypeCommand) GetUuid() string { return v.Uuid }

// GetPipeline returns GetArtifactsArtifactJobJobTypeCommand.Pipeline, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifactJobJobTypeCommand) GetPipeline() *GetArtifactsArtifactJobJobTypeCommandPipeline {
	return v.Pipeline
}

// GetBuild returns GetArtifactsArtifactJobJobTypeCommand.Build, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifactJobJobTypeCommand) GetBuild() *GetArtifactsArtifactJobJobTypeCommandBuild {
	return v.Build
}

// GetArtifactsArtifactJobJobTypeCommandBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type GetArtifactsArtifactJobJobTypeCommandBuild struct {
	// The number of the build
	Number int `json:"number"`
}

// GetNumber returns GetArtifactsArtifactJobJobTypeCommandBuild.Number, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifactJobJobTypeCommandBuild) GetNumber() int { return v.Number }

// GetArtifactsArtifactJobJobTypeCommandPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type GetArtifactsArtifactJobJobTypeCommandPipeline struct {
	// The name of the pipeline
	Name string `json:"name"`
}

// GetName returns GetArtifactsArtifactJobJobTypeCommandPipeline.Name, and is useful for accessing the field via an interface.
func (v *GetArtifactsArtifactJobJobTypeCommandPipeline) GetName() string { return v.Name }

// GetArtifactsResponse is returned by GetArtifacts on success.
type GetArtifactsResponse struct {
	// Find an artifact by its UUID
	Artifact *GetArtifactsArtifact `json:"artifact"`
}

// GetArtifact returns GetArtifactsResponse.Artifact, and is useful for accessing the field via an interface.
func (v *GetArtifactsResponse) GetArtifact() *GetArtifactsArtifact { return v.Artifact }

// GetClusterQueueAgentOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type GetClusterQueueAgentOrganization struct {
	Agents *GetClusterQueueAgentOrganizationAgentsAgentConnection `json:"agents"`
}

// GetAgents returns GetClusterQueueAgentOrganization.Agents, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganization) GetAgents() *GetClusterQueueAgentOrganizationAgentsAgentConnection {
	return v.Agents
}

// GetClusterQueueAgentOrganizationAgentsAgentConnection includes the requested fields of the GraphQL type AgentConnection.
type GetClusterQueueAgentOrganizationAgentsAgentConnection struct {
	Edges []*GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge `json:"edges"`
}

// GetEdges returns GetClusterQueueAgentOrganizationAgentsAgentConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnection) GetEdges() []*GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge {
	return v.Edges
}

// GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge includes the requested fields of the GraphQL type AgentEdge.
type GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge struct {
	Node *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent `json:"node"`
}

// GetNode returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge.Node, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdge) GetNode() *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent {
	return v.Node
}

// GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent includes the requested fields of the GraphQL type Agent.
// The GraphQL type's documentation follows.
//
// An agent
type GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent struct {
	// The name of the agent
	Name string `json:"name"`
	// The hostname of the machine running the agent
	Hostname *string `json:"hostname"`
	// The version of the agent
	Version      *string                                                                                   `json:"version"`
	Id           string                                                                                    `json:"id"`
	ClusterQueue *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue `json:"clusterQueue"`
}

// GetName returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent.Name, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent) GetName() string {
	return v.Name
}

// GetHostname returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent.Hostname, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent) GetHostname() *string {
	return v.Hostname
}

// GetVersion returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent.Version, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent) GetVersion() *string {
	return v.Version
}

// GetId returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent.Id, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent) GetId() string {
	return v.Id
}

// GetClusterQueue returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent.ClusterQueue, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgent) GetClusterQueue() *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue {
	return v.ClusterQueue
}

// GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue struct {
	Id string `json:"id"`
	// The public UUID for this cluster queue
	Uuid string `json:"uuid"`
}

// GetId returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue) GetId() string {
	return v.Id
}

// GetUuid returns GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentOrganizationAgentsAgentConnectionEdgesAgentEdgeNodeAgentClusterQueue) GetUuid() string {
	return v.Uuid
}

// GetClusterQueueAgentResponse is returned by GetClusterQueueAgent on success.
type GetClusterQueueAgentResponse struct {
	// Find an organization
	Organization *GetClusterQueueAgentOrganization `json:"organization"`
}

// GetOrganization returns GetClusterQueueAgentResponse.Organization, and is useful for accessing the field via an interface.
func (v *GetClusterQueueAgentResponse) GetOrganization() *GetClusterQueueAgentOrganization {
	return v.Organization
}

// GetClusterQueuesOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type GetClusterQueuesOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster *GetClusterQueuesOrganizationCluster `json:"cluster"`
}

// GetCluster returns GetClusterQueuesOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganization) GetCluster() *GetClusterQueuesOrganizationCluster {
	return v.Cluster
}

// GetClusterQueuesOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type GetClusterQueuesOrganizationCluster struct {
	// Name of the cluster
	Name string `json:"name"`
	// Description of the cluster
	Description *string                                                          `json:"description"`
	Queues      *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection `json:"queues"`
}

// GetName returns GetClusterQueuesOrganizationCluster.Name, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationCluster) GetName() string { return v.Name }

// GetDescription returns GetClusterQueuesOrganizationCluster.Description, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationCluster) GetDescription() *string { return v.Description }

// GetQueues returns GetClusterQueuesOrganizationCluster.Queues, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationCluster) GetQueues() *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection {
	return v.Queues
}

// GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection includes the requested fields of the GraphQL type ClusterQueueConnection.
type GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection struct {
	Edges []*GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge `json:"edges"`
}

// GetEdges returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnection) GetEdges() []*GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge {
	return v.Edges
}

// GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge includes the requested fields of the GraphQL type ClusterQueueEdge.
type GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge struct {
	Node *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue `json:"node"`
}

// GetNode returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge.Node, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge) GetNode() *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue {
	return v.Node
}

// GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue struct {
	Id string `json:"id"`
	// The public UUID for this cluster queue
	Uuid        string  `json:"uuid"`
	Key         string  `json:"key"`
	Description *string `json:"description"`
}

// GetId returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetId() string {
	return v.Id
}

// GetUuid returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetUuid() string {
	return v.Uuid
}

// GetKey returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetKey() string {
	return v.Key
}

// GetDescription returns GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetDescription() *string {
	return v.Description
}

// GetClusterQueuesResponse is returned by GetClusterQueues on success.
type GetClusterQueuesResponse struct {
	// Find an organization
	Organization *GetClusterQueuesOrganization `json:"organization"`
}

// GetOrganization returns GetClusterQueuesResponse.Organization, and is useful for accessing the field via an interface.
func (v *GetClusterQueuesResponse) GetOrganization() *GetClusterQueuesOrganization {
	return v.Organization
}

// GetOrganizationIDOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type GetOrganizationIDOrganization struct {
	Id string `json:"id"`
}

// GetId returns GetOrganizationIDOrganization.Id, and is useful for accessing the field via an interface.
func (v *GetOrganizationIDOrganization) GetId() string { return v.Id }

// GetOrganizationIDResponse is returned by GetOrganizationID on success.
type GetOrganizationIDResponse struct {
	// Find an organization
	Organization *GetOrganizationIDOrganization `json:"organization"`
}

// GetOrganization returns GetOrganizationIDResponse.Organization, and is useful for accessing the field via an interface.
func (v *GetOrganizationIDResponse) GetOrganization() *GetOrganizationIDOrganization {
	return v.Organization
}

// GetPipelinePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type GetPipelinePipeline struct {
	// The name of the pipeline
	Name string `json:"name"`
	// The short description of the pipeline
	Description *string `json:"description"`
	// The emoji of the pipeline
	Emoji *string `json:"emoji"`
	// The color of the pipeline
	Color *string `json:"color"`
	// Returns true if the viewer has favorited this pipeline
	Favorite bool                                                `json:"favorite"`
	Steps    *GetPipelinePipelineSteps                           `json:"steps"`
	Metrics  *GetPipelinePipelineMetricsPipelineMetricConnection `json:"metrics"`
	// Tags that have been given to this pipeline
	Tags []GetPipelinePipelineTagsPipelineTag `json:"tags"`
}

// GetName returns GetPipelinePipeline.Name, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetName() string { return v.Name }

// GetDescription returns GetPipelinePipeline.Description, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetDescription() *string { return v.Description }

// GetEmoji returns GetPipelinePipeline.Emoji, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetEmoji() *string { return v.Emoji }

// GetColor returns GetPipelinePipeline.Color, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetColor() *string { return v.Color }

// GetFavorite returns GetPipelinePipeline.Favorite, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetFavorite() bool { return v.Favorite }

// GetSteps returns GetPipelinePipeline.Steps, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetSteps() *GetPipelinePipelineSteps { return v.Steps }

// GetMetrics returns GetPipelinePipeline.Metrics, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetMetrics() *GetPipelinePipelineMetricsPipelineMetricConnection {
	return v.Metrics
}

// GetTags returns GetPipelinePipeline.Tags, and is useful for accessing the field via an interface.
func (v *GetPipelinePipeline) GetTags() []GetPipelinePipelineTagsPipelineTag { return v.Tags }

// GetPipelinePipelineMetricsPipelineMetricConnection includes the requested fields of the GraphQL type PipelineMetricConnection.
type GetPipelinePipelineMetricsPipelineMetricConnection struct {
	Edges []*GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge `json:"edges"`
}

// GetEdges returns GetPipelinePipelineMetricsPipelineMetricConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineMetricsPipelineMetricConnection) GetEdges() []*GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge {
	return v.Edges
}

// GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge includes the requested fields of the GraphQL type PipelineMetricEdge.
type GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge struct {
	Node *GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric `json:"node"`
}

// GetNode returns GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge.Node, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdge) GetNode() *GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric {
	return v.Node
}

// GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric includes the requested fields of the GraphQL type PipelineMetric.
// The GraphQL type's documentation follows.
//
// A metric for a pipeline
type GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric struct {
	// The label of this metric
	Label string `json:"label"`
	// The value for this metric
	Value *string `json:"value"`
}

// GetLabel returns GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric.Label, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric) GetLabel() string {
	return v.Label
}

// GetValue returns GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric.Value, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineMetricsPipelineMetricConnectionEdgesPipelineMetricEdgeNodePipelineMetric) GetValue() *string {
	return v.Value
}

// GetPipelinePipelineSteps includes the requested fields of the GraphQL type PipelineSteps.
// The GraphQL type's documentation follows.
//
// Steps defined on a pipeline
type GetPipelinePipelineSteps struct {
	// A YAML representation of the pipeline steps
	Yaml *string `json:"yaml"`
}

// GetYaml returns GetPipelinePipelineSteps.Yaml, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineSteps) GetYaml() *string { return v.Yaml }

// GetPipelinePipelineTagsPipelineTag includes the requested fields of the GraphQL type PipelineTag.
// The GraphQL type's documentation follows.
//
// A tag associated with a pipeline
type GetPipelinePipelineTagsPipelineTag struct {
	// The label for this tag
	Label string `json:"label"`
}

// GetLabel returns GetPipelinePipelineTagsPipelineTag.Label, and is useful for accessing the field via an interface.
func (v *GetPipelinePipelineTagsPipelineTag) GetLabel() string { return v.Label }

// GetPipelineResponse is returned by GetPipeline on success.
type GetPipelineResponse struct {
	// Find a pipeline
	Pipeline *GetPipelinePipeline `json:"pipeline"`
}

// GetPipeline returns GetPipelineResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *GetPipelineResponse) GetPipeline() *GetPipelinePipeline { return v.Pipeline }

// InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload includes the requested fields of the GraphQL type OrganizationInvitationCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of OrganizationInvitationCreate.
type InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId *string `json:"clientMutationId"`
}

// GetClientMutationId returns InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload) GetClientMutationId() *string {
	return v.ClientMutationId
}

// InviteUserResponse is returned by InviteUser on success.
type InviteUserResponse struct {
	// Send email invitations to this organization.
	OrganizationInvitationCreate *InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload `json:"organizationInvitationCreate"`
}

// GetOrganizationInvitationCreate returns InviteUserResponse.OrganizationInvitationCreate, and is useful for accessing the field via an interface.
func (v *InviteUserResponse) GetOrganizationInvitationCreate() *InviteUserOrganizationInvitationCreateOrganizationInvitationCreatePayload {
	return v.OrganizationInvitationCreate
}

// All the possible states a job can be in
type JobStates string

const (
	// The job has just been created and doesn't have a state yet
	JobStatesPending JobStates = "PENDING"
	// The job is waiting on a `wait` step to finish
	JobStatesWaiting JobStates = "WAITING"
	// The job was in a `WAITING` state when the build failed
	JobStatesWaitingFailed JobStates = "WAITING_FAILED"
	// The job is waiting on a `block` step to finish
	JobStatesBlocked JobStates = "BLOCKED"
	// The job was in a `BLOCKED` state when the build failed
	JobStatesBlockedFailed JobStates = "BLOCKED_FAILED"
	// This `block` job has been manually unblocked
	JobStatesUnblocked JobStates = "UNBLOCKED"
	// This `block` job was in an `UNBLOCKED` state when the build failed
	JobStatesUnblockedFailed JobStates = "UNBLOCKED_FAILED"
	// The job is waiting on a concurrency group check before becoming either `LIMITED` or `SCHEDULED`
	JobStatesLimiting JobStates = "LIMITING"
	// The job is waiting for jobs with the same concurrency group to finish
	JobStatesLimited JobStates = "LIMITED"
	// The job is scheduled and waiting for an agent
	JobStatesScheduled JobStates = "SCHEDULED"
	// The job has been assigned to an agent, and it's waiting for it to accept
	JobStatesAssigned JobStates = "ASSIGNED"
	// The job was accepted by the agent, and now it's waiting to start running
	JobStatesAccepted JobStates = "ACCEPTED"
	// The job is running
	JobStatesRunning JobStates = "RUNNING"
	// The job has finished
	JobStatesFinished JobStates = "FINISHED"
	// The job is currently canceling
	JobStatesCanceling JobStates = "CANCELING"
	// The job was canceled
	JobStatesCanceled JobStates = "CANCELED"
	// The job is timing out for taking too long
	JobStatesTimingOut JobStates = "TIMING_OUT"
	// The job timed out
	JobStatesTimedOut JobStates = "TIMED_OUT"
	// The job was skipped
	JobStatesSkipped JobStates = "SKIPPED"
	// The jobs configuration means that it can't be run
	JobStatesBroken JobStates = "BROKEN"
	// The job expired before it was started on an agent
	JobStatesExpired JobStates = "EXPIRED"
)

var AllJobStates = []JobStates{
	JobStatesPending,
	JobStatesWaiting,
	JobStatesWaitingFailed,
	JobStatesBlocked,
	JobStatesBlockedFailed,
	JobStatesUnblocked,
	JobStatesUnblockedFailed,
	JobStatesLimiting,
	JobStatesLimited,
	JobStatesScheduled,
	JobStatesAssigned,
	JobStatesAccepted,
	JobStatesRunning,
	JobStatesFinished,
	JobStatesCanceling,
	JobStatesCanceled,
	JobStatesTimingOut,
	JobStatesTimedOut,
	JobStatesSkipped,
	JobStatesBroken,
	JobStatesExpired,
}

// RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload includes the requested fields of the GraphQL type JobTypeCommandRetryPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of JobTypeCommandRetry.
type RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload struct {
	JobTypeCommand RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand `json:"jobTypeCommand"`
}

// GetJobTypeCommand returns RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload.JobTypeCommand, and is useful for accessing the field via an interface.
func (v *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload) GetJobTypeCommand() RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand {
	return v.JobTypeCommand
}

// RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand includes the requested fields of the GraphQL type JobTypeCommand.
// The GraphQL type's documentation follows.
//
// A type of job that runs a command on an agent
type RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand struct {
	Id string `json:"id"`
	// The state of the job
	State JobStates `json:"state"`
	// The URL for the job
	Url string `json:"url"`
}

// GetId returns RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand.Id, and is useful for accessing the field via an interface.
func (v *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand) GetId() string {
	return v.Id
}

// GetState returns RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand.State, and is useful for accessing the field via an interface.
func (v *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand) GetState() JobStates {
	return v.State
}

// GetUrl returns RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand.Url, and is useful for accessing the field via an interface.
func (v *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayloadJobTypeCommand) GetUrl() string {
	return v.Url
}

// RetryJobResponse is returned by RetryJob on success.
type RetryJobResponse struct {
	// Retry a job.
	JobTypeCommandRetry *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload `json:"jobTypeCommandRetry"`
}

// GetJobTypeCommandRetry returns RetryJobResponse.JobTypeCommandRetry, and is useful for accessing the field via an interface.
func (v *RetryJobResponse) GetJobTypeCommandRetry() *RetryJobJobTypeCommandRetryJobTypeCommandRetryPayload {
	return v.JobTypeCommandRetry
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload includes the requested fields of the GraphQL type JobTypeBlockUnblockPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of JobTypeBlockUnblock.
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload struct {
	JobTypeBlock UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock `json:"jobTypeBlock"`
}

// GetJobTypeBlock returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload.JobTypeBlock, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload) GetJobTypeBlock() UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock {
	return v.JobTypeBlock
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock includes the requested fields of the GraphQL type JobTypeBlock.
// The GraphQL type's documentation follows.
//
// A type of job that requires a user to unblock it before proceeding in a build pipeline
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock struct {
	Id string `json:"id"`
	// The state of the job
	State JobStates `json:"state"`
	// Whether or not this job can be unblocked yet (may be waiting on another job to finish)
	IsUnblockable *bool `json:"isUnblockable"`
	// The build that this job is a part of
	Build *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild `json:"build"`
}

// GetId returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.Id, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetId() string {
	return v.Id
}

// GetState returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.State, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetState() JobStates {
	return v.State
}

// GetIsUnblockable returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.IsUnblockable, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetIsUnblockable() *bool {
	return v.IsUnblockable
}

// GetBuild returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.Build, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetBuild() *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild {
	return v.Build
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild struct {
	// The URL for the build
	Url string `json:"url"`
}

// GetUrl returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild.Url, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild) GetUrl() string {
	return v.Url
}

// UnblockJobResponse is returned by UnblockJob on success.
type UnblockJobResponse struct {
	// Unblocks a build's "Block pipeline" job.
	JobTypeBlockUnblock *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload `json:"jobTypeBlockUnblock"`
}

// GetJobTypeBlockUnblock returns UnblockJobResponse.JobTypeBlockUnblock, and is useful for accessing the field via an interface.
func (v *UnblockJobResponse) GetJobTypeBlockUnblock() *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload {
	return v.JobTypeBlockUnblock
}

// __GetArtifactsInput is used internally by genqlient
type __GetArtifactsInput struct {
	ArtifactId string `json:"artifactId"`
}

// GetArtifactId returns __GetArtifactsInput.ArtifactId, and is useful for accessing the field via an interface.
func (v *__GetArtifactsInput) GetArtifactId() string { return v.ArtifactId }

// __GetClusterQueueAgentInput is used internally by genqlient
type __GetClusterQueueAgentInput struct {
	OrgSlug string   `json:"orgSlug"`
	QueueId []string `json:"queueId"`
}

// GetOrgSlug returns __GetClusterQueueAgentInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__GetClusterQueueAgentInput) GetOrgSlug() string { return v.OrgSlug }

// GetQueueId returns __GetClusterQueueAgentInput.QueueId, and is useful for accessing the field via an interface.
func (v *__GetClusterQueueAgentInput) GetQueueId() []string { return v.QueueId }

// __GetClusterQueuesInput is used internally by genqlient
type __GetClusterQueuesInput struct {
	OrgSlug   string `json:"orgSlug"`
	ClusterId string `json:"clusterId"`
}

// GetOrgSlug returns __GetClusterQueuesInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__GetClusterQueuesInput) GetOrgSlug() string { return v.OrgSlug }

// GetClusterId returns __GetClusterQueuesInput.ClusterId, and is useful for accessing the field via an interface.
func (v *__GetClusterQueuesInput) GetClusterId() string { return v.ClusterId }

// __GetOrganizationIDInput is used internally by genqlient
type __GetOrganizationIDInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __GetOrganizationIDInput.Slug, and is useful for accessing the field via an interface.
func (v *__GetOrganizationIDInput) GetSlug() string { return v.Slug }

// __GetPipelineInput is used internally by genqlient
type __GetPipelineInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __GetPipelineInput.Slug, and is useful for accessing the field via an interface.
func (v *__GetPipelineInput) GetSlug() string { return v.Slug }

// __InviteUserInput is used internally by genqlient
type __InviteUserInput struct {
	Organization string   `json:"organization"`
	Emails       []string `json:"emails"`
}

// GetOrganization returns __InviteUserInput.Organization, and is useful for accessing the field via an interface.
func (v *__InviteUserInput) GetOrganization() string { return v.Organization }

// GetEmails returns __InviteUserInput.Emails, and is useful for accessing the field via an interface.
func (v *__InviteUserInput) GetEmails() []string { return v.Emails }

// __RetryJobInput is used internally by genqlient
type __RetryJobInput struct {
	Id string `json:"id"`
}

// GetId returns __RetryJobInput.Id, and is useful for accessing the field via an interface.
func (v *__RetryJobInput) GetId() string { return v.Id }

// __UnblockJobInput is used internally by genqlient
type __UnblockJobInput struct {
	Id     string  `json:"id"`
	Fields *string `json:"fields"`
}

// GetId returns __UnblockJobInput.Id, and is useful for accessing the field via an interface.
func (v *__UnblockJobInput) GetId() string { return v.Id }

// GetFields returns __UnblockJobInput.Fields, and is useful for accessing the field via an interface.
func (v *__UnblockJobInput) GetFields() *string { return v.Fields }

// The query executed by GetArtifacts.
const GetArtifacts_Operation = `
query GetArtifacts ($artifactId: ID!) {
	artifact(uuid: $artifactId) {
		uuid
		path
		downloadURL
		job {
			uuid
			pipeline {
				name
			}
			build {
				number
			}
		}
	}
}
`

func GetArtifacts(
	ctx_ context.Context,
	client_ graphql.Client,
	artifactId string,
) (data_ *GetArtifactsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetArtifacts",
		Query:  GetArtifacts_Operation,
		Variables: &__GetArtifactsInput{
			ArtifactId: artifactId,
		},
	}

	data_ = &GetArtifactsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetClusterQueueAgent.
const GetClusterQueueAgent_Operation = `
query GetClusterQueueAgent ($orgSlug: ID!, $queueId: [ID!]) {
	organization(slug: $orgSlug) {
		agents(first: 10, clusterQueue: $queueId) {
			edges {
				node {
					name
					hostname
					version
					id
					clusterQueue {
						id
						uuid
					}
				}
			}
		}
	}
}
`

func GetClusterQueueAgent(
	ctx_ context.Context,
	client_ graphql.Client,
	orgSlug string,
	queueId []string,
) (data_ *GetClusterQueueAgentResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetClusterQueueAgent",
		Query:  GetClusterQueueAgent_Operation,
		Variables: &__GetClusterQueueAgentInput{
			OrgSlug: orgSlug,
			QueueId: queueId,
		},
	}

	data_ = &GetClusterQueueAgentResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetClusterQueues.
const GetClusterQueues_Operation = `
query GetClusterQueues ($orgSlug: ID!, $clusterId: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $clusterId) {
			name
			description
			queues(first: 10) {
				edges {
					node {
						id
						uuid
						key
						description
					}
				}
			}
		}
	}
}
`

func GetClusterQueues(
	ctx_ context.Context,
	client_ graphql.Client,
	orgSlug string,
	clusterId string,
) (data_ *GetClusterQueuesResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetClusterQueues",
		Query:  GetClusterQueues_Operation,
		Variables: &__GetClusterQueuesInput{
			OrgSlug:   orgSlug,
			ClusterId: clusterId,
		},
	}

	data_ = &GetClusterQueuesResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetOrganizationID.
const GetOrganizationID_Operation = `
query GetOrganizationID ($slug: ID!) {
	organization(slug: $slug) {
		id
	}
}
`

func GetOrganizationID(
	ctx_ context.Context,
	client_ graphql.Client,
	slug string,
) (data_ *GetOrganizationIDResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetOrganizationID",
		Query:  GetOrganizationID_Operation,
		Variables: &__GetOrganizationIDInput{
			Slug: slug,
		},
	}

	data_ = &GetOrganizationIDResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetPipeline.
const GetPipeline_Operation = `
query GetPipeline ($slug: ID!) {
	pipeline(slug: $slug) {
		name
		description
		emoji
		color
		favorite
		steps {
			yaml
		}
		metrics {
			edges {
				node {
					label
					value
				}
			}
		}
		tags {
			label
		}
	}
}
`

func GetPipeline(
	ctx_ context.Context,
	client_ graphql.Client,
	slug string,
) (data_ *GetPipelineResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetPipeline",
		Query:  GetPipeline_Operation,
		Variables: &__GetPipelineInput{
			Slug: slug,
		},
	}

	data_ = &GetPipelineResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by InviteUser.
const InviteUser_Operation = `
mutation InviteUser ($organization: ID!, $emails: [String!]!) {
	organizationInvitationCreate(input: {organizationID:$organization,emails:$emails}) {
		clientMutationId
	}
}
`

func InviteUser(
	ctx_ context.Context,
	client_ graphql.Client,
	organization string,
	emails []string,
) (data_ *InviteUserResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "InviteUser",
		Query:  InviteUser_Operation,
		Variables: &__InviteUserInput{
			Organization: organization,
			Emails:       emails,
		},
	}

	data_ = &InviteUserResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by RetryJob.
const RetryJob_Operation = `
mutation RetryJob ($id: ID!) {
	jobTypeCommandRetry(input: {id:$id}) {
		jobTypeCommand {
			id
			state
			url
		}
	}
}
`

func RetryJob(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *RetryJobResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "RetryJob",
		Query:  RetryJob_Operation,
		Variables: &__RetryJobInput{
			Id: id,
		},
	}

	data_ = &RetryJobResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UnblockJob.
const UnblockJob_Operation = `
mutation UnblockJob ($id: ID!, $fields: JSON) {
	jobTypeBlockUnblock(input: {id:$id,fields:$fields}) {
		jobTypeBlock {
			id
			state
			isUnblockable
			build {
				url
			}
		}
	}
}
`

func UnblockJob(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	fields *string,
) (data_ *UnblockJobResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UnblockJob",
		Query:  UnblockJob_Operation,
		Variables: &__UnblockJobInput{
			Id:     id,
			Fields: fields,
		},
	}

	data_ = &UnblockJobResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
