// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// RecentBuildsForBranchPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type RecentBuildsForBranchPipeline struct {
	// Returns the builds for this pipeline
	Builds *RecentBuildsForBranchPipelineBuildsBuildConnection `json:"builds"`
}

// GetBuilds returns RecentBuildsForBranchPipeline.Builds, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipeline) GetBuilds() *RecentBuildsForBranchPipelineBuildsBuildConnection {
	return v.Builds
}

// RecentBuildsForBranchPipelineBuildsBuildConnection includes the requested fields of the GraphQL type BuildConnection.
type RecentBuildsForBranchPipelineBuildsBuildConnection struct {
	Edges []*RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge `json:"edges"`
}

// GetEdges returns RecentBuildsForBranchPipelineBuildsBuildConnection.Edges, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnection) GetEdges() []*RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge {
	return v.Edges
}

// RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge includes the requested fields of the GraphQL type BuildEdge.
type RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge struct {
	Node *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild `json:"node"`
}

// GetNode returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge.Node, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge) GetNode() *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild {
	return v.Node
}

// RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild struct {
	Id string `json:"id"`
	// The message for the build
	Message *string `json:"message"`
	// The number of the build
	Number int `json:"number"`
	// The URL for the build
	Url string `json:"url"`
	// The UUID for the build
	Uuid string `json:"uuid"`
}

// GetId returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Id, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetId() string {
	return v.Id
}

// GetMessage returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Message, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetMessage() *string {
	return v.Message
}

// GetNumber returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Number, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetNumber() int {
	return v.Number
}

// GetUrl returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Url, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetUrl() string {
	return v.Url
}

// GetUuid returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Uuid, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetUuid() string {
	return v.Uuid
}

// RecentBuildsForBranchResponse is returned by RecentBuildsForBranch on success.
type RecentBuildsForBranchResponse struct {
	// Find a pipeline
	Pipeline *RecentBuildsForBranchPipeline `json:"pipeline"`
}

// GetPipeline returns RecentBuildsForBranchResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchResponse) GetPipeline() *RecentBuildsForBranchPipeline {
	return v.Pipeline
}

// __RecentBuildsForBranchInput is used internally by genqlient
type __RecentBuildsForBranchInput struct {
	Branch       string `json:"branch"`
	PipelineSlug string `json:"pipelineSlug"`
}

// GetBranch returns __RecentBuildsForBranchInput.Branch, and is useful for accessing the field via an interface.
func (v *__RecentBuildsForBranchInput) GetBranch() string { return v.Branch }

// GetPipelineSlug returns __RecentBuildsForBranchInput.PipelineSlug, and is useful for accessing the field via an interface.
func (v *__RecentBuildsForBranchInput) GetPipelineSlug() string { return v.PipelineSlug }

// The query or mutation executed by RecentBuildsForBranch.
const RecentBuildsForBranch_Operation = `
query RecentBuildsForBranch ($branch: String!, $pipelineSlug: ID!) {
	pipeline(slug: $pipelineSlug) {
		builds(first: 2, branch: [$branch]) {
			edges {
				node {
					id
					message
					number
					url
					uuid
				}
			}
		}
	}
}
`

func RecentBuildsForBranch(
	ctx_ context.Context,
	client_ graphql.Client,
	branch string,
	pipelineSlug string,
) (*RecentBuildsForBranchResponse, error) {
	req_ := &graphql.Request{
		OpName: "RecentBuildsForBranch",
		Query:  RecentBuildsForBranch_Operation,
		Variables: &__RecentBuildsForBranchInput{
			Branch:       branch,
			PipelineSlug: pipelineSlug,
		},
	}
	var err_ error

	var data_ RecentBuildsForBranchResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
