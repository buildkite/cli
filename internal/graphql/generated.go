// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// All the possible states a job can be in
type JobStates string

const (
	// The job has just been created and doesn't have a state yet
	JobStatesPending JobStates = "PENDING"
	// The job is waiting on a `wait` step to finish
	JobStatesWaiting JobStates = "WAITING"
	// The job was in a `WAITING` state when the build failed
	JobStatesWaitingFailed JobStates = "WAITING_FAILED"
	// The job is waiting on a `block` step to finish
	JobStatesBlocked JobStates = "BLOCKED"
	// The job was in a `BLOCKED` state when the build failed
	JobStatesBlockedFailed JobStates = "BLOCKED_FAILED"
	// This `block` job has been manually unblocked
	JobStatesUnblocked JobStates = "UNBLOCKED"
	// This `block` job was in an `UNBLOCKED` state when the build failed
	JobStatesUnblockedFailed JobStates = "UNBLOCKED_FAILED"
	// The job is waiting on a concurrency group check before becoming either `LIMITED` or `SCHEDULED`
	JobStatesLimiting JobStates = "LIMITING"
	// The job is waiting for jobs with the same concurrency group to finish
	JobStatesLimited JobStates = "LIMITED"
	// The job is scheduled and waiting for an agent
	JobStatesScheduled JobStates = "SCHEDULED"
	// The job has been assigned to an agent, and it's waiting for it to accept
	JobStatesAssigned JobStates = "ASSIGNED"
	// The job was accepted by the agent, and now it's waiting to start running
	JobStatesAccepted JobStates = "ACCEPTED"
	// The job is running
	JobStatesRunning JobStates = "RUNNING"
	// The job has finished
	JobStatesFinished JobStates = "FINISHED"
	// The job is currently canceling
	JobStatesCanceling JobStates = "CANCELING"
	// The job was canceled
	JobStatesCanceled JobStates = "CANCELED"
	// The job is timing out for taking too long
	JobStatesTimingOut JobStates = "TIMING_OUT"
	// The job timed out
	JobStatesTimedOut JobStates = "TIMED_OUT"
	// The job was skipped
	JobStatesSkipped JobStates = "SKIPPED"
	// The jobs configuration means that it can't be run
	JobStatesBroken JobStates = "BROKEN"
	// The job expired before it was started on an agent
	JobStatesExpired JobStates = "EXPIRED"
)

// RecentBuildsForBranchPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type RecentBuildsForBranchPipeline struct {
	// Returns the builds for this pipeline
	Builds *RecentBuildsForBranchPipelineBuildsBuildConnection `json:"builds"`
}

// GetBuilds returns RecentBuildsForBranchPipeline.Builds, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipeline) GetBuilds() *RecentBuildsForBranchPipelineBuildsBuildConnection {
	return v.Builds
}

// RecentBuildsForBranchPipelineBuildsBuildConnection includes the requested fields of the GraphQL type BuildConnection.
type RecentBuildsForBranchPipelineBuildsBuildConnection struct {
	Edges []*RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge `json:"edges"`
}

// GetEdges returns RecentBuildsForBranchPipelineBuildsBuildConnection.Edges, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnection) GetEdges() []*RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge {
	return v.Edges
}

// RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge includes the requested fields of the GraphQL type BuildEdge.
type RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge struct {
	Node *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild `json:"node"`
}

// GetNode returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge.Node, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdge) GetNode() *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild {
	return v.Node
}

// RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild struct {
	Id string `json:"id"`
	// The message for the build
	Message *string `json:"message"`
	// The number of the build
	Number int `json:"number"`
	// The URL for the build
	Url string `json:"url"`
	// The UUID for the build
	Uuid string `json:"uuid"`
}

// GetId returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Id, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetId() string {
	return v.Id
}

// GetMessage returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Message, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetMessage() *string {
	return v.Message
}

// GetNumber returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Number, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetNumber() int {
	return v.Number
}

// GetUrl returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Url, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetUrl() string {
	return v.Url
}

// GetUuid returns RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild.Uuid, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchPipelineBuildsBuildConnectionEdgesBuildEdgeNodeBuild) GetUuid() string {
	return v.Uuid
}

// RecentBuildsForBranchResponse is returned by RecentBuildsForBranch on success.
type RecentBuildsForBranchResponse struct {
	// Find a pipeline
	Pipeline *RecentBuildsForBranchPipeline `json:"pipeline"`
}

// GetPipeline returns RecentBuildsForBranchResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *RecentBuildsForBranchResponse) GetPipeline() *RecentBuildsForBranchPipeline {
	return v.Pipeline
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload includes the requested fields of the GraphQL type JobTypeBlockUnblockPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of JobTypeBlockUnblock.
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload struct {
	JobTypeBlock UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock `json:"jobTypeBlock"`
}

// GetJobTypeBlock returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload.JobTypeBlock, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload) GetJobTypeBlock() UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock {
	return v.JobTypeBlock
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock includes the requested fields of the GraphQL type JobTypeBlock.
// The GraphQL type's documentation follows.
//
// A type of job that requires a user to unblock it before proceeding in a build pipeline
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock struct {
	Id string `json:"id"`
	// The state of the job
	State JobStates `json:"state"`
	// Whether or not this job can be unblocked yet (may be waiting on another job to finish)
	IsUnblockable *bool `json:"isUnblockable"`
	// The build that this job is a part of
	Build *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild `json:"build"`
}

// GetId returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.Id, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetId() string {
	return v.Id
}

// GetState returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.State, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetState() JobStates {
	return v.State
}

// GetIsUnblockable returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.IsUnblockable, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetIsUnblockable() *bool {
	return v.IsUnblockable
}

// GetBuild returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock.Build, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlock) GetBuild() *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild {
	return v.Build
}

// UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild struct {
	// The URL for the build
	Url string `json:"url"`
}

// GetUrl returns UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild.Url, and is useful for accessing the field via an interface.
func (v *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayloadJobTypeBlockBuild) GetUrl() string {
	return v.Url
}

// UnblockJobResponse is returned by UnblockJob on success.
type UnblockJobResponse struct {
	// Unblocks a build's "Block pipeline" job.
	JobTypeBlockUnblock *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload `json:"jobTypeBlockUnblock"`
}

// GetJobTypeBlockUnblock returns UnblockJobResponse.JobTypeBlockUnblock, and is useful for accessing the field via an interface.
func (v *UnblockJobResponse) GetJobTypeBlockUnblock() *UnblockJobJobTypeBlockUnblockJobTypeBlockUnblockPayload {
	return v.JobTypeBlockUnblock
}

// __RecentBuildsForBranchInput is used internally by genqlient
type __RecentBuildsForBranchInput struct {
	Branch       string `json:"branch"`
	PipelineSlug string `json:"pipelineSlug"`
}

// GetBranch returns __RecentBuildsForBranchInput.Branch, and is useful for accessing the field via an interface.
func (v *__RecentBuildsForBranchInput) GetBranch() string { return v.Branch }

// GetPipelineSlug returns __RecentBuildsForBranchInput.PipelineSlug, and is useful for accessing the field via an interface.
func (v *__RecentBuildsForBranchInput) GetPipelineSlug() string { return v.PipelineSlug }

// __UnblockJobInput is used internally by genqlient
type __UnblockJobInput struct {
	Id string `json:"id"`
}

// GetId returns __UnblockJobInput.Id, and is useful for accessing the field via an interface.
func (v *__UnblockJobInput) GetId() string { return v.Id }

// The query or mutation executed by RecentBuildsForBranch.
const RecentBuildsForBranch_Operation = `
query RecentBuildsForBranch ($branch: String!, $pipelineSlug: ID!) {
	pipeline(slug: $pipelineSlug) {
		builds(first: 2, branch: [$branch]) {
			edges {
				node {
					id
					message
					number
					url
					uuid
				}
			}
		}
	}
}
`

func RecentBuildsForBranch(
	ctx_ context.Context,
	client_ graphql.Client,
	branch string,
	pipelineSlug string,
) (*RecentBuildsForBranchResponse, error) {
	req_ := &graphql.Request{
		OpName: "RecentBuildsForBranch",
		Query:  RecentBuildsForBranch_Operation,
		Variables: &__RecentBuildsForBranchInput{
			Branch:       branch,
			PipelineSlug: pipelineSlug,
		},
	}
	var err_ error

	var data_ RecentBuildsForBranchResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UnblockJob.
const UnblockJob_Operation = `
mutation UnblockJob ($id: ID!) {
	jobTypeBlockUnblock(input: {id:$id}) {
		jobTypeBlock {
			id
			state
			isUnblockable
			build {
				url
			}
		}
	}
}
`

func UnblockJob(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*UnblockJobResponse, error) {
	req_ := &graphql.Request{
		OpName: "UnblockJob",
		Query:  UnblockJob_Operation,
		Variables: &__UnblockJobInput{
			Id: id,
		},
	}
	var err_ error

	var data_ UnblockJobResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
